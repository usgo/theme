<?php

/**
 * Implements hook_filter_info().
 *
 */
function header_adjust_filter_filter_info() {
    $filters['header_adjust_filter'] = array(
            'title' => t('HTML Header Adjust Filter'),
            'description' => t('Implements a filter that changes HTML header 1 down to header 2 and on, if header 1 is used'),
            'process callback'  => '_header_adjust_filter_process',
            'tips callback' => '_header_adjust_filter_tips',
            );
    return $filters;
}

/**
 * Filter tips callback
 *
 */
function _header_adjust_filter_tips($filter, $format, $long = FALSE) {
    $ret = t('Headers are adjusted down one level such that <h1>s are not used in content');
    return $ret;
}


function _header_adjust_do_replacement($a) {
    $a = pq($a);
    $patterns = array("/^<h5/",   "/^<h4/",   "/^<h3/",   "/^<h2/",   "/^<h1/",
                      "#</h5>$#", "#</h4>$#", "#</h3>$#", "#</h2>$#", "#</h1>$#");
    $replaces = array("<h6",      "<h5",      "<h4",      "<h3",      "<h2",
                      "</h6>",    "</h5>",    "</h4>",    "</h3>",    "</h2>");
    $b = pq(preg_replace($patterns, $replaces, $a));
    $a->replaceWith($b);
}

function _header_adjust_filter_process($text, $filter) {
    include_once(drupal_get_path('module', 'header_adjust_filter') . '/phpQuery.php');
    phpQuery::newDocumentXHTML($text);
    $has_h1 = FALSE;
    foreach(pq('h1') as $h1) {
        $has_h1 = TRUE;
        break;
    }
    if ($has_h1) {
        pq(':heading')->each(function ($a) {
            $a = pq($a);
            $patterns = array("/^<h5/",   "/^<h4/",   "/^<h3/",   "/^<h2/",   "/^<h1/",
                              "#</h5>$#", "#</h4>$#", "#</h3>$#", "#</h2>$#", "#</h1>$#");
            $replaces = array("<h6",      "<h5",      "<h4",      "<h3",      "<h2",
                              "</h6>",    "</h5>",    "</h4>",    "</h3>",    "</h2>");
            $b = pq(preg_replace($patterns, $replaces, $a));
            $a->replaceWith($b);
        });
        return (string) pq('');
    }
    return $text;
}

